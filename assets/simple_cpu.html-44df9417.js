const e=JSON.parse(`{"key":"v-2ad98e1e","path":"/cpu/simple_cpu.html","title":"简单流水线CPU设计","lang":"zh-CN","frontmatter":{"title":"简单流水线CPU设计","description":"本文实际上是对《CPU设计实战》（汪文祥 邢金璋 著）一书第四章的简单总结、概括。 设计一个简单的单周期CPU CPU设计的一般方法：数据通路+控制逻辑 准备工作 如何划分模块 某层次设计细节很多，很难画出来，把他干成一个框，作为一个模块 模块的接口不应该有太多 可以被多次使用的，比如译码器、多路选择器、寄存器堆、RAM、FIFO（First In First Out） 两个模块间数据总体应该呈单向流动，至多一去一回。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/cpu/simple_cpu.html"}],["meta",{"property":"og:site_name","content":"Jielahou's Blog"}],["meta",{"property":"og:title","content":"简单流水线CPU设计"}],["meta",{"property":"og:description","content":"本文实际上是对《CPU设计实战》（汪文祥 邢金璋 著）一书第四章的简单总结、概括。 设计一个简单的单周期CPU CPU设计的一般方法：数据通路+控制逻辑 准备工作 如何划分模块 某层次设计细节很多，很难画出来，把他干成一个框，作为一个模块 模块的接口不应该有太多 可以被多次使用的，比如译码器、多路选择器、寄存器堆、RAM、FIFO（First In First Out） 两个模块间数据总体应该呈单向流动，至多一去一回。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-01-10T13:13:40.000Z"}],["meta",{"property":"article:modified_time","content":"2023-01-10T13:13:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"简单流水线CPU设计\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-01-10T13:13:40.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"准备工作","slug":"准备工作","link":"#准备工作","children":[{"level":3,"title":"如何划分模块","slug":"如何划分模块","link":"#如何划分模块","children":[]},{"level":3,"title":"PC","slug":"pc","link":"#pc","children":[]},{"level":3,"title":"虚实地址转换","slug":"虚实地址转换","link":"#虚实地址转换","children":[]},{"level":3,"title":"指令RAM","slug":"指令ram","link":"#指令ram","children":[]}]},{"level":2,"title":"数据通路设计","slug":"数据通路设计","link":"#数据通路设计","children":[{"level":3,"title":"ADDU指令","slug":"addu指令","link":"#addu指令","children":[]},{"level":3,"title":"ADDIU指令","slug":"addiu指令","link":"#addiu指令","children":[]},{"level":3,"title":"SUBU指令","slug":"subu指令","link":"#subu指令","children":[]},{"level":3,"title":"LW指令","slug":"lw指令","link":"#lw指令","children":[]},{"level":3,"title":"SW指令","slug":"sw指令","link":"#sw指令","children":[]},{"level":3,"title":"BEQ和BNE指令","slug":"beq和bne指令","link":"#beq和bne指令","children":[]},{"level":3,"title":"JAL指令","slug":"jal指令","link":"#jal指令","children":[]}]}],"git":{"createdTime":1673344959000,"updatedTime":1673356420000,"contributors":[{"name":"jielahou","email":"jielahou@gmail.com","commits":2}]},"readingTime":{"minutes":5.82,"words":1745},"filePathRelative":"cpu/simple_cpu.md","localizedDate":"2023年1月10日","excerpt":"<blockquote>\\n<p>本文实际上是对《CPU设计实战》（汪文祥 邢金璋 著）一书第四章的简单总结、概括。</p>\\n</blockquote>\\n<h1> 设计一个简单的单周期CPU</h1>\\n<blockquote>\\n<p>CPU设计的一般方法：数据通路+控制逻辑</p>\\n</blockquote>\\n<h2> 准备工作</h2>\\n<h3> 如何划分模块</h3>\\n<ul>\\n<li>某层次设计细节很多，很难画出来，把他干成一个框，作为一个模块</li>\\n<li>模块的接口不应该有太多</li>\\n<li>可以被多次使用的，比如译码器、多路选择器、寄存器堆、RAM、FIFO（First In First Out）</li>\\n<li>两个模块间数据总体应该呈单向流动，至多一去一回。</li>\\n</ul>","autoDesc":true}`);export{e as data};
