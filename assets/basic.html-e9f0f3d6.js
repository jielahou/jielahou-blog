import{_ as e,W as c,X as o,$ as d}from"./framework-cb524fb0.js";const a={},t=d('<blockquote><p>本文大部分内容摘抄自<code>c.biancheng.net</code>C语言中文网教程内容。</p><p>如有侵权，请联系我删除。</p></blockquote><h2 id="类和对象" tabindex="-1"><a class="header-anchor" href="#类和对象" aria-hidden="true">#</a> 类和对象</h2><p>成员变量大都以<code>m_</code>开头，这是约定成俗的写法，不是语法规定的内容。以<code>m_</code>开头既可以一眼看出这是成员变量，又可以和成员函数中的形参名字区分开。</p><blockquote><p>以 setname() 为例，如果将成员变量<code>m_name</code>的名字修改为<code>name</code>，那么 setname() 的形参就不能再叫<code>name</code>了，得换成诸如<code>name1</code>、<code>_name</code>这样没有明显含义的名字，否则<code>name=name;</code>这样的语句就是给形参<code>name</code>赋值，而不是给成员变量<code>name</code>赋值。</p></blockquote><p>给成员变量赋值的函数通常称为 set 函数，它们的名字通常以<code>set</code>开头，后跟成员变量的名字；读取成员变量的值的函数通常称为 get 函数，它们的名字通常以<code>get</code>开头，后跟成员变量的名字。</p><p>这种将成员变量声明为 private、将部分成员函数声明为 public 的做法体现了类的封装性。所谓封装，是指尽量隐藏类的内部实现，只向用户提供有用的成员函数。</p>',6),n=[t];function s(m,_){return c(),o("div",null,n)}const r=e(a,[["render",s],["__file","basic.html.vue"]]);export{r as default};
