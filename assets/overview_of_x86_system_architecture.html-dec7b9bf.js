const e=JSON.parse(`{"key":"v-63d2ee68","path":"/system/overview_of_x86_system_architecture.html","title":"x86系统架构概览","lang":"zh-CN","frontmatter":{"title":"x86系统架构概览","description":"x86系统架构概览 系统级体系结构概览 手册图2.1 图中的实线箭头表示线性地址(Linear Address)，虚线表示段选择子(Segment Selector)，点线表示物理地址(Physical Selector)。为了简单起见，许多段选择器画成了直接指向段的指针。然而，从段选择器到相关段的实际路径总是要通过GDT或LDT的。 补充CSAPP略微讲过的逻辑地址、线性地址和物理地址：","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/system/overview_of_x86_system_architecture.html"}],["meta",{"property":"og:site_name","content":"Jielahou's Blog"}],["meta",{"property":"og:title","content":"x86系统架构概览"}],["meta",{"property":"og:description","content":"x86系统架构概览 系统级体系结构概览 手册图2.1 图中的实线箭头表示线性地址(Linear Address)，虚线表示段选择子(Segment Selector)，点线表示物理地址(Physical Selector)。为了简单起见，许多段选择器画成了直接指向段的指针。然而，从段选择器到相关段的实际路径总是要通过GDT或LDT的。 补充CSAPP略微讲过的逻辑地址、线性地址和物理地址："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mister-hope.github.io/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-18T04:17:18.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"x86系统架构概览"}],["meta",{"property":"article:modified_time","content":"2023-04-18T04:17:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"x86系统架构概览\\",\\"image\\":[\\"https://mister-hope.github.io/\\"],\\"dateModified\\":\\"2023-04-18T04:17:18.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"系统级体系结构概览","slug":"系统级体系结构概览","link":"#系统级体系结构概览","children":[{"level":3,"title":"Global and Local Descriptor Tables","slug":"global-and-local-descriptor-tables","link":"#global-and-local-descriptor-tables","children":[]},{"level":3,"title":"System Segments, Segment Descriptors, and Gates","slug":"system-segments-segment-descriptors-and-gates","link":"#system-segments-segment-descriptors-and-gates","children":[]},{"level":3,"title":"Task-State Segments and Task Gates","slug":"task-state-segments-and-task-gates","link":"#task-state-segments-and-task-gates","children":[]},{"level":3,"title":"Interrupt and Exception Handling","slug":"interrupt-and-exception-handling","link":"#interrupt-and-exception-handling","children":[]},{"level":3,"title":"Memory Management","slug":"memory-management","link":"#memory-management","children":[]},{"level":3,"title":"System Registers","slug":"system-registers","link":"#system-registers","children":[]}]},{"level":2,"title":"实模式和保护模式转换","slug":"实模式和保护模式转换","link":"#实模式和保护模式转换","children":[{"level":3,"title":"x86中的四种模式","slug":"x86中的四种模式","link":"#x86中的四种模式","children":[]},{"level":3,"title":"模式间的转换","slug":"模式间的转换","link":"#模式间的转换","children":[]}]},{"level":2,"title":"80x86系统指令寄存器","slug":"_80x86系统指令寄存器","link":"#_80x86系统指令寄存器","children":[{"level":3,"title":"标志寄存器 EFLAGS","slug":"标志寄存器-eflags","link":"#标志寄存器-eflags","children":[]},{"level":3,"title":"内存管理寄存器","slug":"内存管理寄存器","link":"#内存管理寄存器","children":[]},{"level":3,"title":"控制寄存器","slug":"控制寄存器","link":"#控制寄存器","children":[]}]},{"level":2,"title":"系统指令","slug":"系统指令","link":"#系统指令","children":[]}],"git":{"createdTime":1681791438000,"updatedTime":1681791438000,"contributors":[{"name":"jielahou","email":"jielahou@gmail.com","commits":1}]},"readingTime":{"minutes":25.97,"words":7791},"filePathRelative":"system/overview_of_x86_system_architecture.md","localizedDate":"2023年4月18日","excerpt":"<h1> x86系统架构概览</h1>\\n<h2> 系统级体系结构概览</h2>\\n<figure><figcaption>手册图2.1</figcaption></figure>\\n<blockquote>\\n<p>图中的实线箭头表示线性地址(Linear Address)，虚线表示段选择子(Segment Selector)，点线表示物理地址(Physical Selector)。为了简单起见，许多段选择器画成了直接指向段的指针。然而，从段选择器到相关段的实际路径总是要通过GDT或LDT的。</p>\\n</blockquote>\\n<blockquote>\\n<p>补充CSAPP略微讲过的逻辑地址、线性地址和物理地址：</p>\\n</blockquote>","autoDesc":true}`);export{e as data};
