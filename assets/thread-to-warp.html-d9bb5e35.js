import{_ as t,F as o,W as n,X as c,Y as e,Z as a,a0 as d,$ as i}from"./framework-c1077caf.js";const h={},s={href:"https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#simt-architecture%EF%BC%89%E7%9A%84%E4%B8%80%E5%8F%A5%E8%AF%9D%EF%BC%9A",target:"_blank",rel:"noopener noreferrer"},l=e("blockquote",null,[e("p",null,[a("When a multiprocessor is given one or more thread blocks to execute, it partitions them into warps and each warp gets scheduled by a "),e("em",null,"warp scheduler"),a(" for execution. The way a block is partitioned into warps is always the same; each warp contains threads of consecutive, increasing thread IDs with the first warp containing thread 0. Thread Hierarchy describes how thread IDs relate to thread indices in the block.")])],-1),p=e("p",null,"线程块被划分为线程的方式总是相同的。**每个线程束包含着Thread ID连续的、递增的线程（第一个线程束包含线程0）。**线程架构描述了Thread ID和Thread Index的关系。",-1),u=e("p",null,"看来，只要弄清楚“线程架构”，即Thread Index和Thread ID之间的关系，就能够知道给定Thread Index的线程，其和哪些线程归属同一个warp，进而去针对warp做优化。",-1),m={href:"https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#thread-hierarchy",target:"_blank",rel:"noopener noreferrer"},_=i("<ul><li><p>1维的Thread Index，其Thread ID就是Thread Index</p></li><li><p>2维的Thread Index，其Thread ID为<code>tx + ty * DX</code></p></li><li><p>3维的Thread Index，其Thread ID为<code>tx + ty * DX + tz * DX * DY</code></p></li></ul><p>由此再回到本文的问题：Thread如何划分为Warp?</p><ul><li>对于1维的Thread Index，直接32个为一组划分（e.g. <code>0~31</code>、<code>32~63</code>、<code>64~95</code>...）</li><li>对于2维的Thread Index，先按照x分，然后再按照y分（e.g. 假设Thread Block大小为[dx]16*[dy]32，那么<code>(0,0),(1,0)...(14,0),(15,0),(0,1),(1,1)...(14,1),(15,1)</code>是一个warp内的）</li><li>对于3维的Thread Index，先按照x分，然后再按照y分，最后按照z分（例子略）</li></ul>",3);function x(T,I){const r=o("ExternalLinkIcon");return n(),c("div",null,[e("p",null,[a("先看这里（"),e("a",s,[a("https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#simt-architecture）的一句话："),d(r)])]),l,p,u,e("p",null,[a("Thread Index和Thread ID之间有什么关系呢？（线程架构参考这里："),e("a",m,[a("CUDA C++ Programming Guide (nvidia.com)"),d(r)]),a("）")]),_])}const D=t(h,[["render",x],["__file","thread-to-warp.html.vue"]]);export{D as default};
