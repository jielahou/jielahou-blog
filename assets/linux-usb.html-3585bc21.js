import{_ as t,W as o,X as n,$ as r}from"./framework-cb524fb0.js";const s={},l=r('<blockquote><p>由于笔者近期需要折腾Linux下的USB主机控制器驱动，故本文对《Linux设备驱动开发详解》（宋宝华）中的相关内容进行整理与总结。</p></blockquote><p>从<strong>主机侧</strong>角度，我们要编写<strong>主机控制器驱动</strong>和<strong>设备驱动</strong>。</p><ul><li>主机控制器驱动：控制插入主机的设备</li><li>设备驱动：控制插入的设备如何作为从设备与主机通信</li></ul><p>从设备侧角度，我们要编写设备控制器驱动和Gadget Function驱动。</p><h1 id="主机侧与设备侧usb驱动" tabindex="-1"><a class="header-anchor" href="#主机侧与设备侧usb驱动" aria-hidden="true">#</a> 主机侧与设备侧USB驱动</h1><p>每条总线上只能有一个主机控制器，设备不能主动向主机发送消息。</p><h2 id="设备、配置、接口、端点" tabindex="-1"><a class="header-anchor" href="#设备、配置、接口、端点" aria-hidden="true">#</a> 设备、配置、接口、端点</h2><p>每个设备可以提供不同的配置，配置由接口组成；在USB协议中，<strong>接口</strong>由多个端点组成，代表一个<strong>基本的功能</strong>，是USB<strong>设备驱动程序控制的对象</strong>，一个功能复杂的USB<strong>设备可以具有多个接口</strong>。每个配置中可以有多个接口，而<strong>设备接口是端点的汇集</strong>（Collection）。</p><blockquote><p>如对于一个USB音响，可以包含一个音频接口、一个旋钮和按钮的接口</p></blockquote><p><strong>端点</strong>是USB<strong>通信的最基本形式</strong>，每一个USB接口在主机看来就是一个端点的集合，<strong>主机</strong>只能<strong>通过端点</strong>与设备通信，以使用设备功能。</p><ul><li>每个端点有唯一的<strong>地址</strong>：由设备地址和端点号给出</li><li>每个端点有一定的<strong>属性</strong>：传输方式、总线访问频率、带宽、端点号和数据包的最大容量</li><li>USB端点只能<strong>承载单向数据</strong><ul><li>主机--&gt;设备：输出端点；设备--&gt;主机：输入端点</li></ul></li><li>端点0为控制端点，控制初始化参数等，只要上电就能被访问</li><li>端点1、2为数据端点，存放主机与设备往来的数据</li></ul>',11),e=[l];function i(g,a){return o(),n("div",null,e)}const u=t(s,[["render",i],["__file","linux-usb.html.vue"]]);export{u as default};
